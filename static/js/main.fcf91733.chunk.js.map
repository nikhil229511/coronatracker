{"version":3,"sources":["components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronaImg","alt","image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,UAAY,4B,oBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,oBCDhCD,EAAOC,QAAU,IAA0B,mC,yRCgD5BC,EA1CD,SAAC,GAAwD,IAAD,IAAtDC,KAAOC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACjD,OAAIH,EAIA,yBAAKI,UAAWC,IAAOC,WACnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAChC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,WACzE,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKxB,EAAUyB,MAAOC,SAAU,IAAKC,UAAU,OAEtE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,QAAQD,cAAY,GAAxC,wCAGR,kBAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,YACzE,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKvB,EAAUwB,MAAOC,SAAU,IAAKC,UAAU,OAEtE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,QAAQD,cAAY,GAAxC,wCAGR,kBAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOH,SACzE,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKtB,EAAOuB,MAAOC,SAAU,IAAKC,UAAU,OAEnE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,QAAQD,cAAY,GAAxC,2CAhCT,c,iCCNTS,EAAI,iCAEGC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,sEAEbC,EAAeJ,EACfE,IACAE,EAAY,UAAMJ,EAAN,sBAAuBE,IAJtB,SAMkDG,IAAMC,IAAIF,GAN5D,2BAMTnC,KAAOC,EANE,EAMFA,UAAWC,EANT,EAMSA,UAAWC,EANpB,EAMoBA,OAAQC,EAN5B,EAM4BA,WAN5B,kBAOV,CAAEH,YAAWC,YAAWC,SAAQC,eAPtB,kCASjBkC,QAAQC,IAAR,MATiB,0DAAH,sDAaTC,EAAc,uCAAG,gCAAAN,EAAA,+EAECE,IAAMC,IAAN,UAAaN,EAAb,WAFD,uBAEd/B,EAFc,EAEdA,KACFyC,EAAezC,EAAK0C,KAAI,SAAAC,GAAS,MAAK,CACxC1C,UAAW0C,EAAU1C,UAAU2C,MAC/BzC,OAAQwC,EAAUxC,OAAOyC,MACzBC,KAAMF,EAAUG,eANE,kBAQfL,GARe,gCAUtBH,QAAQC,IAAR,MAVsB,yDAAH,qDAcdQ,EAAc,uCAAG,8BAAAb,EAAA,+EAEgBE,IAAMC,IAAN,UAAaN,EAAb,eAFhB,uBAENiB,EAFM,EAEdhD,KAAQgD,UAFM,kBAGfA,EAAUN,KAAI,SAAAT,GAAO,OAAIA,EAAQgB,SAHlB,gCAKtBX,QAAQC,IAAR,MALsB,yDAAH,qD,kBCoCZW,EA9DA,SAAC,GAAsD,IAAD,IAAnDlD,KAAOC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,OAAS8B,EAAa,EAAbA,QAAa,EAC7BkB,mBAAS,IADoB,mBACzDR,EADyD,KAC9CS,EAD8C,KAGjEC,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbkB,EADa,SACMZ,IADN,6EAAH,qDAGdc,KACD,IAEH,IAAMC,EACFZ,GAAaA,EAAUa,OACnB,kBAAC,IAAD,CACIxD,KAAM,CACFyD,OAAQd,EAAUD,KAAI,qBAAGG,QACzBa,SAAU,CAAC,CACP1D,KAAM2C,EAAUD,KAAI,qBAAGzC,aACvB0D,MAAO,WACPC,YAAa,UACbC,MAAM,GACP,CACC7D,KAAM2C,EAAUD,KAAI,qBAAGvC,UACvBwD,MAAO,SACPC,YAAa,MACbE,gBAAiB,uBACjBD,MAAM,OAIlB,KAGFE,EACF9D,EAEI,kBAAC,IAAD,CACID,KAAM,CACFyD,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CAAC,CACPC,MAAO,SACPG,gBAAiB,CACb,uBACA,uBACA,wBAEJ9D,KAAM,CAACC,EAAUyB,MAAOxB,EAAUwB,MAAOvB,EAAOuB,QACjD,KAEPsC,QAAS,CACLC,OAAQ,CAACC,SAAS,GAClBC,MAAO,CAAED,SAAS,EAAME,KAAK,uBAAD,OAAyBnC,OAG7D,KAER,OACI,yBAAK5B,UAAWC,IAAOC,WAClB0B,EAAU8B,EAAUR,I,oCCrClBc,EApBO,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACbnB,qBADa,mBACxCH,EADwC,KAC7BuB,EAD6B,KAU/C,OAPAlB,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbqC,EADa,SACMxB,IADN,6EAAH,qDAGdO,KACD,CAACN,IAGA,kBAACwB,EAAA,EAAD,CAAanE,UAAWC,IAAOmE,aAC3B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOP,EAAoBO,EAAEC,OAAOpD,SACxE,4BAAQA,MAAM,IAAd,UACCsB,GAAaA,EAAUN,KAAI,SAACT,EAAS8C,GAAV,OAAgB,4BAAQC,IAAKD,EAAGrD,MAAOO,GAAUA,S,kBCiB9EgD,E,4MA7BXC,MAAQ,CACJlF,KAAM,GACNiC,QAAS,I,EASbqC,oB,uCAAsB,WAAOrC,GAAP,eAAAC,EAAA,sEACQF,EAAUC,GADlB,OACZkD,EADY,OAElB,EAAKC,SAAS,CAAEpF,KAAMmF,EAAalD,QAASA,IAF1B,2C,wPAJQD,I,OAApBmD,E,OACNE,KAAKD,SAAS,CAAEpF,KAAMmF,I,qIAQhB,IAAD,EACmBE,KAAKH,MAAtBlF,EADF,EACEA,KAAMiC,EADR,EACQA,QACb,OACI,yBAAK5B,UAAWC,IAAOC,WACnB,yBAAK+E,IAAKC,IAAWC,IAAI,WAAWnF,UAAWC,IAAOmF,QACtD,kBAAC,EAAD,CAAOzF,KAAMA,IACb,kBAAC,EAAD,CAAesE,oBAAqBe,KAAKf,sBACzC,kBAAC,EAAD,CAAQtE,KAAMA,EAAMiC,QAASA,S,GAzB3ByD,IAAMC,WCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCHjDlG,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,mBCAnKD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,sB","file":"static/js/main.fcf91733.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1mZfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","import React from 'react';\nimport {Card, Typography, CardContent, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport styles from './Cards.module.css';\n\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\n    if(!confirmed) {\n        return 'loading...'\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={confirmed.value} duration={2.5} seperator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\" gutterBottom>Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={recovered.value} duration={2.5} seperator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\" gutterBottom>Number of recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={deaths.value} duration={2.5} seperator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\" gutterBottom>Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nexport default Cards;","import axios from 'axios';\n\nconst url='https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    try {\n        let changableUrl = url;\n        if (country) {\n            changableUrl = `${url}/countries/${country}`;\n        }\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changableUrl);\n        return { confirmed, recovered, deaths, lastUpdate };\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n        const modifiedData = data.map(dailyData => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }));\n        return modifiedData;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries } } = await axios.get(`${url}/countries`);\n        return countries.map(country => country.name);\n    } catch (error) {\n        console.log(error);\n    }\n}","import React, { useState, useEffect} from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Charts.module.css';\n\nconst Charts = ({ data: {confirmed, recovered, deaths}, country}) => {\n    const [ dailyData, setDailyData ] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }; \n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData && dailyData.length ? (\n            <Line \n                data={{\n                    labels: dailyData.map(({ date }) => date),\n                    datasets: [{\n                        data: dailyData.map(({ confirmed }) => confirmed),\n                        label: 'Infected',\n                        borderColor: '#3333FF',\n                        fill: true,\n                    }, {\n                        data: dailyData.map(({ deaths }) => deaths),\n                        label: 'Deaths',\n                        borderColor: 'red',\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                        fill: true,\n                    }]\n                }}\n            />\n        ) : null\n    );\n\n    const barChart = (\n        confirmed ? \n        (\n            <Bar \n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\n                            'rgba(0, 0, 255, 0.5)',\n                            'rgba(0, 255, 0, 0.5)',\n                            'rgba(255, 0, 0, 0.5)'\n                        ],\n                        data: [confirmed.value, recovered.value, deaths.value]\n                    }, {}]\n                }}\n                options={{\n                    legend: {display: false},\n                    title: { display: true, text: `Current sitution in ${country}`}\n                }}\n            />\n        ) : null\n    );\n    return (\n        <div className={styles.container}>\n            {country ? barChart: lineChart}\n        </div>\n    );\n};\n\nexport default Charts;","import React, {useState, useEffect } from 'react';\nimport { NativeSelect, FormControl} from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n    const [countries, setCountries] = useState();\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setCountries(await fetchCountries());\n        };\n        fetchAPI();\n    }, [countries]);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {countries && countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    );\n};\n\nexport default CountryPicker;","import React from 'react';\nimport styles from './App.module.css';\nimport { Cards, Charts, CountryPicker } from './components';\nimport { fetchData } from './api';\nimport coronaImg from './images/image.png'\nclass App extends React.Component {\n    //constructor is created in backend automatically.\n    state = {\n        data: {},\n        country: '',\n    };\n    \n    async componentDidMount() {\n\n        const fetchedData = await fetchData();\n        this.setState({ data: fetchedData});\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        this.setState({ data: fetchedData, country: country});\n    };\n\n    render() {\n        const {data, country} = this.state;\n        return (\n            <div className={styles.container}>\n                <img src={coronaImg} alt=\"Covid-19\" className={styles.image} />\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Charts data={data} country={country} />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};"],"sourceRoot":""}